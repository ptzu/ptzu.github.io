<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RS232 on Ptzu's blog</title><link>https://ptzu.github.io/tags/rs232/</link><description>Recent content in RS232 on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 09 Jun 2017 14:47:40 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/rs232/index.xml" rel="self" type="application/rss+xml"/><item><title>透過 RS232 進行電腦訊息互傳</title><link>https://ptzu.github.io/posts/rs232-implement/</link><pubDate>Fri, 09 Jun 2017 14:47:40 +0000</pubDate><guid>https://ptzu.github.io/posts/rs232-implement/</guid><description>禮拜一花了 9 個小時 完成了電腦之間用 RS232 互傳 以及電腦對字幕機的寫入
需要器材 兩條 USB 轉 RS232接線 RS232 兩端母對母的線 母對母的需要對TX, RX做跳線(外面賣的是沒有跳線) 電腦之間互傳 首先是我們在網路上找到的 RS232 C Library RS232 下載
打開下載回來的 RS232 包 可以看到裡面有 demo_tx.c 和 demo_rx.c TX, RX 分別代表傳輸和接收
TX 要修改的是 cport_nr 這個變數 他代表要用哪個連接埠傳輸, 可以到裝置管理員看是哪一個 我們的是 COM4 所以改成 cport_nr=3 然後 bdrate 代表的是 baud rate, 是傳輸速率
/************************************************** file: demo_tx.c purpose: simple demo that transmits characters to the serial port and print them on the screen, exit the program by pressing Ctrl-C compile with the command: gcc demo_tx.</description></item><item><title>RS232雜記</title><link>https://ptzu.github.io/posts/rs232/</link><pubDate>Thu, 04 May 2017 21:29:03 +0000</pubDate><guid>https://ptzu.github.io/posts/rs232/</guid><description>1.BuildCommDCB 函數原型: BOOL BuildCommDCB( LPCTSTR lpDef, LPDCB lpDCB ). BuildCommDCB 函數是用來填寫 DCB 的資料,何謂 DCB 呢? DCB 的全名為 Device Control Block 是一資料結構,裡面定義著所有有關串列通訊(Serial Communication)的設定值,DCB 資料結構定義如下:
typedef struct _DCB { DWORD DCBlength; // DCB 的大小 (in byte) DWORD BaudRate; // 傳輸率 (baud rate) bit/秒 DWORD fBinary: 1; // 二進制模式,沒有 EOF 檢查. DWORD fParity: 1; // 同位元檢查 (parity checking) DWORD fOutxCtsFlow:1; // CTS output flow control DWORD fOutxDsrFlow:1; // DSR output flow control DWORD fDtrControl:2; // DTR flow control type DWORD fDsrSensitivity:1; // DSR sensitivity DWORD fTXContinueOnXoff:1; // XOFF continues Tx DWORD fOutX: 1; // XON/XOFF out flow control DWORD fInX: 1; // XON/XOFF in flow control DWORD fErrorChar: 1; // enable error replacement DWORD fNull: 1; // enable null stripping DWORD fRtsControl:2; // RTS flow control DWORD fAbortOnError:1; // abort reads/writes on error DWORD fDummy2:17; // reserved WORD wReserved; // not currently used WORD XonLim; // transmit XON threshold WORD XoffLim; // transmit XOFF threshold BYTE ByteSize; // 每一筆資料的 bit 數, 4-8 BYTE Parity; // 同位元 (0-4) = 無,奇同位,偶同位,mark,space BYTE StopBits; // 停止位元 (0,1,2) = 1, 1.</description></item></channel></rss>