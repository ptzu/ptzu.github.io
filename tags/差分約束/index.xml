<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>差分約束 on Ptzu's blog</title><link>https://ptzu.github.io/tags/%E5%B7%AE%E5%88%86%E7%B4%84%E6%9D%9F/</link><description>Recent content in 差分約束 on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 13 Apr 2018 16:46:55 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/%E5%B7%AE%E5%88%86%E7%B4%84%E6%9D%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>POJ 1201 Intervals</title><link>https://ptzu.github.io/posts/poj1201/</link><pubDate>Fri, 13 Apr 2018 16:46:55 +0000</pubDate><guid>https://ptzu.github.io/posts/poj1201/</guid><description>題目
input 輸入 N (1 &amp;lt;= N &amp;lt;= 50000) 代表有 N 個區間 區間輸入 [a, b] 有 c 個元素
題解 給一些區間, 並告訴你其中有幾個元素 區間之間可重疊元素 請問總共最少有幾個元素？
作法 區間約束 令 d[i] 為 0&amp;hellip;i 區間有幾個元素 則題目可以轉化為 d[b + 1] - d[a] &amp;gt;= c index 向右平移 1 是為了不要有負的 index 然後稍做整理 d[a] - d[b + 1] &amp;lt;= -c 建一條從 a -&amp;gt; b 的 -c 邊 除此之外還有個條件是 0 &amp;lt;= d[i + 1] - d[i] &amp;lt;= 1 建好圖之後求差分約束即可
PS： 網路上很多作法在建邊是這樣定義 d[b + 1] - d[a] &amp;gt;= c, 從 a -&amp;gt; b 建一條 c 邊 然後求最長路徑 想法應該是一樣 不過有點麻煩我就用我習慣的定義了</description></item><item><title>POJ 3169 Layout</title><link>https://ptzu.github.io/posts/poj3169/</link><pubDate>Fri, 13 Apr 2018 07:33:17 +0000</pubDate><guid>https://ptzu.github.io/posts/poj3169/</guid><description>題目
input 輸入 N, E1, E2 (2 &amp;lt;= N &amp;lt;= 1,000)(1 &amp;lt;= E1,E2 &amp;lt;= 10,000) 分別代表 N 頭牛, 最大距離限制數量, 最小距離限制數量 接著輸入 E1, E2 個限制
題解 有 N 頭牛編號 1 ~ N 有些牛想要和其他牛保持距離, 有些牛希望和其他牛在一定距離內 給一些限制表示兩頭牛之間的最大及最小距離 問第一頭牛和最後一頭牛的最大距離是多少
作法 差分約束裸題 有負環輸出 -1 到不了輸出 -2
AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;queue&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.</description></item></channel></rss>