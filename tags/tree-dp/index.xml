<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tree DP on Ptzu's blog</title><link>https://ptzu.github.io/tags/tree-dp/</link><description>Recent content in Tree DP on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 27 Sep 2017 18:34:56 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/tree-dp/index.xml" rel="self" type="application/rss+xml"/><item><title>POJ 2342 Anniversary party</title><link>https://ptzu.github.io/posts/poj2342/</link><pubDate>Wed, 27 Sep 2017 18:34:56 +0000</pubDate><guid>https://ptzu.github.io/posts/poj2342/</guid><description>題解 派對中有 n 個員工, 老闆不希望對於某個員工, 他的上司和下屬出現在派對, 每個人都有一個歡樂值, 請問派對中最大的歡樂值總和為多少？
作法 樹型DP, bottom-up dp[i][0] 表第 i 個員工不出席的歡樂值 dp[i][1] 表第 i 個員工出席的歡樂值
AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.tie(0) // #define DEBUG(x) printf(&amp;#34;Here: %d\n&amp;#34;, x), exit(0); // LLONG_MIN LLONG_MAX INT_MIN INT_MAX vector &amp;lt;int&amp;gt; g[6060]; int conviviality[6060]; bool point[6060] ;// 判斷是否有被指向 int n; int dp[6060][2]; void DFS(int x){ for(int i = 0; i &amp;lt; sz(g[x]); i++){ int son = g[x][i]; DFS(son); dp[x][0] += max(dp[son][0], dp[son][1]); dp[x][1] += dp[son][0]; } } int main(){ // fio; // #ifdef DEBUG // printf (&amp;#34;TEST\n&amp;#34;); // #else // printf(&amp;#34;FAIL\n&amp;#34;); // #endif cin &amp;gt;&amp;gt; n; for(int i = 0; i &amp;lt; n; i++){ scanf(&amp;#34;%d&amp;#34;, &amp;amp;conviviality[i]); dp[i][1] = conviviality[i]; } for(int i = 0; i &amp;lt; n; i++){ int u, v; scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;u, &amp;amp;v); u--;v--; g[v].</description></item></channel></rss>