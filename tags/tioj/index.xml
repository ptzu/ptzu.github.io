<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TIOJ on Ptzu's blog</title><link>https://ptzu.github.io/tags/tioj/</link><description>Recent content in TIOJ on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 14 Apr 2018 17:02:34 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/tioj/index.xml" rel="self" type="application/rss+xml"/><item><title>TIOJ 1072 A.誰先晚餐</title><link>https://ptzu.github.io/posts/tioj1072/</link><pubDate>Sat, 14 Apr 2018 17:02:34 +0000</pubDate><guid>https://ptzu.github.io/posts/tioj1072/</guid><description>題目
input 輸入檔包含多組測試資料，每一組測試資料的第一行有一個整數N (1 ≤ N ≤ 10000)，代表跟小尹去吃飯的人數，接下來的N行每行有兩個以空白字元分隔的整數Ci Ei ( 1 ≤ i ≤ N, 1 ≤ Ci, Ei ≤ 1000)，其中Ci代表烹煮第i個人點的餐點所需要的時間，Ei代表第i個人把他點的餐點吃完所需要的時間。讀到N = 0的時候代表測試檔案的結尾，不需要對於這個數字作任何輸出。
題解 有 N 個人要吃飯 因為有人吃的快，有人吃的慢 每道餐點做的時間也不一樣 老闆只有一個廚具 要如何安排順序 使飯局結束時間最早
作法 由於不管怎麼排，老闆都是一直做菜 所以做完所有餐點的總時間都是一樣的 而結束時間就會是最後一道菜 加上那個人吃的時間 要使結束時間最短 最後一個人必須吃最快
以這樣的想法去 greedy 即可 另外也有可能最早吃的人 吃太久而超過最後一個人 所以每個人吃的時間都要維護最大值
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.</description></item></channel></rss>