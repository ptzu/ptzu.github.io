<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Others on Ptzu's blog</title><link>https://ptzu.github.io/tags/others/</link><description>Recent content in Others on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 13 Apr 2018 20:58:24 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/others/index.xml" rel="self" type="application/rss+xml"/><item><title>工作排程問題統整</title><link>https://ptzu.github.io/posts/job-scheduling/</link><pubDate>Fri, 13 Apr 2018 20:58:24 +0000</pubDate><guid>https://ptzu.github.io/posts/job-scheduling/</guid><description>Job Scheduling 1 題目
input 第一列輸入 T, 代表 T cases 每筆測資開頭輸入 n (1 &amp;lt;= N &amp;lt;= 100) 代表 n 個工作 每個工作輸入 id, deadline, profit
題解 有 n 個工作 每個工作花費 1 單位時間完成 只要在 deadline 前完成就可以 求最大的 profit 為多少
作法 紀錄最大的 deadline profit 大到小排序後 每次從 max deadline 往前掃, 若有空間就放 時間複雜度: {%math%}O(n^2){%endmath%}
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.</description></item></channel></rss>