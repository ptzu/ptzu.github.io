<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>掃描線 on Ptzu's blog</title><link>https://ptzu.github.io/tags/%E6%8E%83%E6%8F%8F%E7%B7%9A/</link><description>Recent content in 掃描線 on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 28 Mar 2018 21:10:33 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/%E6%8E%83%E6%8F%8F%E7%B7%9A/index.xml" rel="self" type="application/rss+xml"/><item><title>TIOJ 1224 矩形覆蓋面積計算</title><link>https://ptzu.github.io/posts/tioj1224/</link><pubDate>Wed, 28 Mar 2018 21:10:33 +0000</pubDate><guid>https://ptzu.github.io/posts/tioj1224/</guid><description>題目
input 輸入檔只包含一筆測試資料。 第一列有一個正整數n(1&amp;lt;=n&amp;lt;=100,000)，代表有n個矩形。 接下來有n列，每列有四個整數 L,R,D,U(0&amp;lt;=L&amp;lt;R&amp;lt;=1,000,000；0&amp;lt;=D&amp;lt;U&amp;lt;=1,000,000)代表矩形的左、右、下、上四個邊界座標。
題解 給你很多平面上的矩形，請求出它們覆蓋的總表面積。
作法 和 POJ 1151相同
AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.tie(0) #define DEBUG(x) printf(&amp;#34;Here: %d\n&amp;#34;, x), exit(0); // LLONG_MIN LLONG_MAX INT_MIN INT_MAX struct line{ int pos, y1, y2, type; bool operator &amp;lt;(const line&amp;amp; a)const{ return pos &amp;lt; a.</description></item><item><title>POJ 1151 - Atlantis</title><link>https://ptzu.github.io/posts/poj1151/</link><pubDate>Sat, 09 Dec 2017 22:18:31 +0000</pubDate><guid>https://ptzu.github.io/posts/poj1151/</guid><description>題目
input 1 &amp;lt;= n &amp;lt;= 100 0 &amp;lt;= x1 &amp;lt; x2 &amp;lt;= 100000, 0 &amp;lt;= y1 &amp;lt; y2 &amp;lt;= 100000
題解 給 n 個矩形, 求所有矩形覆蓋面積
作法 座標範圍有點大, 先離散化 y 軸 然後掃描線掃 x 軸 若掃到某個矩形的 x1, 就將 y1 ~ y2 區間 +1, 反之掃到 x2 就 -1 以每一段的 x 座標為一個區段, 則這一個區段的面積就是 (x軸變化 * y軸被覆蓋的長度) 將所有區段加起來就是答案
AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;cstring&amp;gt;#include &amp;lt;vector&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.</description></item></channel></rss>