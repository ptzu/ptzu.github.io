<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BIT on Ptzu's blog</title><link>https://ptzu.github.io/tags/bit/</link><description>Recent content in BIT on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Feb 2018 22:39:37 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/bit/index.xml" rel="self" type="application/rss+xml"/><item><title>Codeforces Round 452</title><link>https://ptzu.github.io/posts/cf452/</link><pubDate>Tue, 20 Feb 2018 22:39:37 +0000</pubDate><guid>https://ptzu.github.io/posts/cf452/</guid><description>目錄 湊組別 月份日期合法 數字分堆差最小 湊出最多 9 相同數字區間刪除 區間刪除特定字元 A. Splitting in Teams 題目
input 輸入 n (2 ≤ n ≤ 2·10^5) 代表有 n 組 接著輸入每組有幾人 (1 ≤ a ≤ 2)
題解 有 n 組人參加訓練營, 每組有 1 人或 2 人 教練想要組隊參加比賽, 一隊有 3 人 若是一組要參加, 則整組的人都要參加 問最多能湊出幾隊去比賽
作法 兩人一組的一定只能和一人的組別配對 所以先算出這樣可以配出幾隊 然後剩下的一人組別再去湊
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.</description></item><item><title>POJ 1990 MooFest</title><link>https://ptzu.github.io/posts/poj1990/</link><pubDate>Wed, 24 Jan 2018 16:13:21 +0000</pubDate><guid>https://ptzu.github.io/posts/poj1990/</guid><description>題目
input 第一列輸入一正整數 N, 1 &amp;lt;= N &amp;lt;= 20000 代表 N 頭牛 接著輸入每頭牛的耳背值 v, 位置 x
題解 有 N 頭牛想互相交談 任兩頭牛交談產生的音量是 max(vi, vj) * 距離 求兩兩交談後產生的總音量是多少
作法 如果直接枚舉就炸了 那我們處理的時候一定是選耳背值最大的那個 所以就從耳背值小到大一個一個處理 在處理第 i 個的時候 我們想知道這頭牛, 左邊有幾頭, 右邊有幾頭？ 也想知道左邊的座標和是多少, 右邊的座標和是多少？ 這時候如果每次都去算一次, 那就跟直接枚舉一樣了 所以就交給 BIT 去算！ num_bit: 代表到 pos[i] 總共有幾頭牛 dis_bit: 代表到 pos[i] 的座標總和
每做完一頭牛記得要把他加入到 BIT 裡
AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;algorithm&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.</description></item><item><title>POJ 2155 Matrix</title><link>https://ptzu.github.io/posts/poj2155/</link><pubDate>Sun, 11 Dec 2016 23:40:53 +0000</pubDate><guid>https://ptzu.github.io/posts/poj2155/</guid><description>AC code #include &amp;lt;cstdio&amp;gt;#include &amp;lt;cstring&amp;gt; using namespace std; const int MAX_N = 1000; int bit[MAX_N + 10][MAX_N + 10]; int N, T; void add(int a, int b){ for(int i = a; i &amp;lt;= N; i += (i &amp;amp; -i)){ for(int j = b; j &amp;lt;= N; j += (j &amp;amp; -j)){ bit[i][j]++; } } } int sum(int a, int b){ int s = 0; for(int i = a; i &amp;gt; 0; i -= (i &amp;amp; -i)){ for(int j = b; j &amp;gt; 0; j -= (j &amp;amp; -j)){ s += bit[i][j]; } } return s; } int main(){ int TC; scanf(&amp;#34;%d\n&amp;#34;, &amp;amp;TC); while(TC--){ memset(bit, 0, sizeof(bit)); scanf(&amp;#34;%d %d\n&amp;#34;, &amp;amp;N, &amp;amp;T); for(int i = 0; i &amp;lt; T; i++){ char c[3]; scanf(&amp;#34;%s&amp;#34;, c); if(c[0] == &amp;#39;C&amp;#39;){ int x1, y1, x2, y2; scanf(&amp;#34;%d %d %d %d&amp;#34;, &amp;amp;x1, &amp;amp;y1, &amp;amp;x2, &amp;amp;y2); add(x1, y1); add(x2 + 1, y1); add(x1, y2 + 1); add(x2 + 1, y2 + 1); } else{ int x, y; scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;x, &amp;amp;y); printf(&amp;#34;%d\n&amp;#34;, sum(x, y) % 2); } } puts(&amp;#34;&amp;#34;); } return 0; }</description></item></channel></rss>