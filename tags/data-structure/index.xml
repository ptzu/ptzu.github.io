<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Structure on Ptzu's blog</title><link>https://ptzu.github.io/tags/data-structure/</link><description>Recent content in Data Structure on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Feb 2018 22:39:37 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/tags/data-structure/index.xml" rel="self" type="application/rss+xml"/><item><title>Codeforces Round 452</title><link>https://ptzu.github.io/posts/cf452/</link><pubDate>Tue, 20 Feb 2018 22:39:37 +0000</pubDate><guid>https://ptzu.github.io/posts/cf452/</guid><description>目錄 湊組別 月份日期合法 數字分堆差最小 湊出最多 9 相同數字區間刪除 區間刪除特定字元 A. Splitting in Teams 題目
input 輸入 n (2 ≤ n ≤ 2·10^5) 代表有 n 組 接著輸入每組有幾人 (1 ≤ a ≤ 2)
題解 有 n 組人參加訓練營, 每組有 1 人或 2 人 教練想要組隊參加比賽, 一隊有 3 人 若是一組要參加, 則整組的人都要參加 問最多能湊出幾隊去比賽
作法 兩人一組的一定只能和一人的組別配對 所以先算出這樣可以配出幾隊 然後剩下的一人組別再去湊
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.</description></item><item><title>ZOJ 2112 Dynamic Rankings</title><link>https://ptzu.github.io/posts/zoj2112/</link><pubDate>Fri, 02 Feb 2018 12:16:07 +0000</pubDate><guid>https://ptzu.github.io/posts/zoj2112/</guid><description>題目
input 題解 作法 帶修改的主席樹
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.tie(0) #define DEBUG(x) printf(&amp;#34;Here: %d\n&amp;#34;, x), exit(0); // LLONG_MIN LLONG_MAX INT_MIN INT_MAX const int MAX_N = 60000; int N, M, SZ, cnt; int a[MAX_N + 10]; vector &amp;lt;int&amp;gt; pool; struct node{ int l, r, val; }T[MAX_N * 40]; int root[MAX_N + 10], BIT[MAX_N + 10], use[MAX_N]; struct q{ int type, l, r, k; }Q[10010]; void init(){ cnt = 0; pool.</description></item><item><title>主席樹之詳細解說</title><link>https://ptzu.github.io/posts/chairman-tree/</link><pubDate>Mon, 29 Jan 2018 09:59:36 +0000</pubDate><guid>https://ptzu.github.io/posts/chairman-tree/</guid><description>待補
參考資料 http://blog.csdn.net/Lin_disguiser/article/details/52093248 http://blog.csdn.net/Regina8023/article/details/41910615 https://blog.masterliu.net/chairman-tree/ http://blog.csdn.net/good_night_sion_/article/details/72919960 http://chrysanthemum.is-programmer.com/posts/189902.html 帶修改
https://tw.saowen.com/a/c97b1e0a1d5be2000652c21d5d3471ea86b13359a5acf317c6828c3bf006301f http://blog.csdn.net/u014664226/article/details/47839973</description></item><item><title>Uva 10107 - What is the Median?</title><link>https://ptzu.github.io/posts/uva10107/</link><pubDate>Wed, 25 Oct 2017 07:12:43 +0000</pubDate><guid>https://ptzu.github.io/posts/uva10107/</guid><description>題目
input 0 &amp;lt;= X &amp;lt;= 2^31 N &amp;lt; 10000
題解 輸入一個數 X, 並將目前已輸入的數排序 根據每個輸入, 輸出當前的中位數
作法 若是每次讀進來一個都排序一次, 那肯定 TLE 所以我們可以利用 priority_queue, 每次進來只需要花 O(logn) 做調整
AC code #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; typedef pair &amp;lt;int,int&amp;gt; pii; typedef long long ll; #define pb push_back #define sz(a) (int)a.size() #define INF 0x3f3f3f3f #define st first #define nd second #define fio ios::sync_with_stdio(false), cin.tie(0) #define DEBUG(x) printf(&amp;#34;Here: %d\n&amp;#34;, x), exit(0); // LLONG_MIN LLONG_MAX INT_MIN INT_MAX // const int MAX_N = 30000010; priority_queue &amp;lt;int, vector&amp;lt;int&amp;gt; &amp;gt; smaller; priority_queue &amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt;int&amp;gt; &amp;gt; bigger; void init(){ } int main(){ int x, mid = -1; while(scanf(&amp;#34;%d&amp;#34;, &amp;amp;x) !</description></item></channel></rss>