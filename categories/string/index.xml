<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>String on Ptzu's blog</title><link>https://ptzu.github.io/categories/string/</link><description>Recent content in String on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Mar 2018 09:54:26 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/categories/string/index.xml" rel="self" type="application/rss+xml"/><item><title>KMP Algorithm</title><link>https://ptzu.github.io/posts/template-kmp/</link><pubDate>Sun, 18 Mar 2018 09:54:26 +0000</pubDate><guid>https://ptzu.github.io/posts/template-kmp/</guid><description>index 從 0 開始 無配對為 -1
AC code const int MAX_N = ...; int fail[MAX_N]; void getf(string s){ fail[0] = -1; int idx = -1; for(int i = 1; i &amp;lt; s.length(); i++){ while(idx != -1 &amp;amp;&amp;amp; s[i] != s[idx + 1]){ idx = fail[idx]; } if(s[i] == s[idx + 1]){ fail[i] = idx + 1; idx++; } else fail[i] = -1; } } void KMP(string s, string t){ int idx = -1, t_len = t.</description></item></channel></rss>