<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>學習札記 on Ptzu's blog</title><link>https://ptzu.github.io/categories/%E5%AD%B8%E7%BF%92%E6%9C%AD%E8%A8%98/</link><description>Recent content in 學習札記 on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 24 Sep 2018 10:40:17 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/categories/%E5%AD%B8%E7%BF%92%E6%9C%AD%E8%A8%98/index.xml" rel="self" type="application/rss+xml"/><item><title>對極幾何 Epipolar Geometry</title><link>https://ptzu.github.io/posts/epipolar-geometry/</link><pubDate>Mon, 24 Sep 2018 10:40:17 +0000</pubDate><guid>https://ptzu.github.io/posts/epipolar-geometry/</guid><description>對於一個場景, 透過兩個位置不同的相機觀看 這兩幅圖像之間會有一些點對應關係 整張圖所形成的幾何關係稱為 Epipolar Gemometry 如下圖: 兩個相機中心分別為 {%math%} O_{1},\ O_{2} {%endmath%} 三維世界座標點 {%math%} P {%endmath%} 在兩個像平面 {%math%} A_{1},\ A_{2} {%endmath%} 投影的點為 {%math%} p_{1},\ p_{2} {%endmath%} 而 {%math%} P,\ O_{1}\ O_{2} {%endmath%} 三點所形成的平面稱為極平面(Epipolar plane) {%math%} O_{1}O_{2} {%endmath%}稱為基線(Baseline), 穿越兩個像平面的點分別為 {%math%} e_{1},\ e_{2} {%endmath%} 稱為極點(Epipoles) 投影點與極點連成的線稱為極線(Epipolar Line): {%math%} l_{1},\ l_{2} {%endmath%}
我們可以透過兩幀圖像之間的特徵點對應, 進而求出相機的運動
推導 設點三維做標點 {%math%} P=[X,Y,Z]^{T} {%endmath%} 對於兩個投影點 {%math%} s_{1}p_{1}=KP\s_{2}p_{2}=K(RP+t) {%endmath%} K 是內參矩陣 若是用齊次座標, 可以將 s 去除, 因為常數項不影響 接著我們覺得 K 有點麻煩, 所以我們用歸一化座標 {%math%} x_{1}=K^{-1}p_{1},\ x_{2}=K^{-1}p_{2} {%endmath%} 看公式可以知道這東西其實就是 P 而我們不想透過 K 來得到投影點座標 反而是直接假設有一個距離相機 z = 1 的平面 投影在上面的座標為: {%math%} P=\begin{bmatrix} \frac{X}{Z}\ \frac{Y}{Z}\ 1 \end{bmatrix} {%endmath%} 來得到二維座標 我們可以得到這樣的關係: {%math%} x_{2}=Rx_{1} + t {%endmath%} 接下來就是數學的一些變換: 兩邊同時乘上 {%math%} \hat{t} {%endmath%}, 相當於與 t 做外積 {%math%} \hat{t}x_{2}=\hat{t}Rx_{1} {%endmath%} 上面的 t 因為和自己做外積, 所以消失了 接著左乘 {%math%} x_{2}^{T} {%endmath%} 因為 {%math%} \hat{t}x_{2} {%endmath%} 是一個和 {%math%} t,\ x_{2} {%endmath%} 垂直的向量 再和{%math%} x_{2} {%endmath%} 做內積就會是 0 得到以下式子: {%math%} x_{2}^{T}\hat{t}Rx_{1} = 0 {%endmath%} 此式就稱為 對極約束(Epipolar Constraint) 代入 {%math%} p_{1}, p_{2} {%endmath%} {%math%} p_{2}^{T}K^{-T}\hat{t}RK^{-1}p_{1} = 0 {%endmath%} 幾何意義是 {%math%} P,\ O_{1},\ O_{2} {%endmath%} 共平面 將 {%math%} \hat{t}R {%endmath%} 令成 E, 這東西就稱為本質矩陣(Essential Matrix) 若是有包含內參, 就是基本矩陣(Fundamental Matrix) {%math%} E=\hat{t}R,\ F=K^{-T}EK^{-1} {%endmath%} 進一步簡化約束式: {%math%} x_{2}^{T}Ex_{1}=p_{2}^{T}Fp_{1}=0 {%endmath%}</description></item><item><title>相機校正 - 張正友法</title><link>https://ptzu.github.io/posts/zhang-method/</link><pubDate>Sun, 16 Sep 2018 21:17:55 +0000</pubDate><guid>https://ptzu.github.io/posts/zhang-method/</guid><description>為什麼需要校正 待補
計算單應性矩陣 H 先前在相機模型中, 設三維世界點 {%math%}X = [X, Y, Z, 1]^{T}{%endmath%}, 二維相機像素座標 {%math%}m=[u, v, 1]^{T}{%endmath%} 我們知道這樣的轉換關係: {%math%}sm = K[R, T]X{%endmath%} 其中 s 是尺度因子, K 是內參 {%math%}K = \begin{bmatrix} f_{0} &amp;amp; \gamma &amp;amp; u\ 0 &amp;amp; f_{1}&amp;amp; v\ 0 &amp;amp; 0&amp;amp; 1 \end{bmatrix}{%endmath%} 在棋盤格上我們可以當成是 Z = 0 的平面: {%math%}s\begin{bmatrix} u\ v\ 1 \end{bmatrix} = K \begin{bmatrix} r_{1} &amp;amp; r_{2} &amp;amp; r_{3} &amp;amp; t \end{bmatrix} \begin{bmatrix} X\ Y\ 0\ 1 \end{bmatrix} = K \begin{bmatrix} r_{1} &amp;amp; r_{2} &amp;amp; t \end{bmatrix} \begin{bmatrix} X\ Y\ 1 \end{bmatrix}{%endmath%} 將 {%math%} K[r1, r2, t] {%endmath%} 稱為 單應性矩陣(Homography matrix) H 如此可以用 H 來約束內參和外參 而 H 可以透過棋盤和成像平面上的點對應計算出來(尚待學習) {%math%}s\begin{bmatrix} u\ v\ 1 \end{bmatrix} = H\begin{bmatrix} X\ Y\ 1 \end{bmatrix}{%endmath%} {%math%}H = [h_{1}\ h_{2}\ h_{3}] =\lambda K[r_{1}\ r_{2}\ t]{%endmath%}</description></item><item><title>李代數 SO(3), SE(3) 微分推導</title><link>https://ptzu.github.io/posts/lie-algebra-differential/</link><pubDate>Sat, 15 Sep 2018 22:03:57 +0000</pubDate><guid>https://ptzu.github.io/posts/lie-algebra-differential/</guid><description>SO(3) 當我們考慮到無限小的運動時 就會需要到微分 對於旋轉矩陣 R(t) 我們知道: {%math%}R(t)R^{T}(t) = I{%endmath%} 事實上旋轉矩陣的反矩陣, 即為他的轉置矩陣 接著我們對這個式子兩邊做微分: {%math%}\frac{d}{dt}(RR^{T}) = \dot{R}R^{T} + R\dot{R^{T}} = 0{%endmath%} 移項後得到: {%math%}\dot{R}R^{T} = -(\dot{R}R^{T})^{T}{%endmath%} 此時可以發現到 {%math%} \dot{R}R^{T} {%endmath%} 就是斜對稱矩陣！ 令 {%math%} \hat{w}(t) = -(\dot{R}R^{T})^{T} {%endmath%} 右乘 {%math%} R(t) {%endmath%} 得到: {%math%}\dot{R}(t) = \hat(w)R(t){%endmath%} 如此就得到 R 微分的關係式
SE(3) 接著考慮到剛體運動 對於 {%math%}g = \begin{bmatrix} R &amp;amp; T\ 0 &amp;amp; 1 \end{bmatrix}{%endmath%} 這邊我想了一整天, 才發現很根本的錯誤 原本我想照著 SO(3) 一樣乘上轉置矩陣去求 可是怎麼算都不對 原因就是 SE(3) 的轉置不是他的反矩陣啊啊啊！ 所以回到原本 我們從 {%math%}\dot{g}g^{-1}{%endmath%} 考慮 等等右乘上 g 就可以得出 g 微分的關係式 可以得到: {%math%}\dot{g}g^{-1}=\begin{bmatrix} \dot{R} &amp;amp; \dot{T}\ 0 &amp;amp; 0 \end{bmatrix} \begin{bmatrix} R^{T} &amp;amp; -R^{T}T\ 0 &amp;amp; 1 \end{bmatrix} =\begin{bmatrix} \dot{R}R^{T} &amp;amp; \dot{T}-\dot{R}R^{T}T\ 0 &amp;amp; 0 \end{bmatrix}{%endmath%}</description></item><item><title>CMake 搜尋函式庫 find_package()</title><link>https://ptzu.github.io/posts/cmake-find-package/</link><pubDate>Fri, 14 Sep 2018 10:29:17 +0000</pubDate><guid>https://ptzu.github.io/posts/cmake-find-package/</guid><description>最近使用 CMake 時 使用到了 OpenCV 這個庫 不過因為我電腦裡面有兩個版本 一個是 ROS 自裝的, 一個是自己編譯好的 他一直找到舊版本的函式庫 於是自己就好奇他是如何找到的
當我們呼叫 find_package(套件) 時, 他會從以下步驟搜尋 Find.cmake 檔
從 ${CMAKE_MODULE_PATH} 這個變數中的路徑去搜尋 通常這個是 project 中的 cmake 資料夾 如果找不到, 會到 cmake 中的模組搜尋, 路徑通常是 /usr/share/cmake-x.y/Modules 最後一種是套件安裝時, 會在他自己的資料夾產生 .cmake 檔讓別人搜尋, 稱為配置模式, 尋找 Config.cmake 當找到 .cmake 檔時 會配置以下變數
&amp;lt;NAME&amp;gt;_FOUND &amp;lt;NAME&amp;gt;_INCLUDE_DIRS or &amp;lt;NAME&amp;gt;_INCLUDES &amp;lt;NAME&amp;gt;_LIBRARIES or &amp;lt;NAME&amp;gt;_LIBRARIES or &amp;lt;NAME&amp;gt;_LIBS &amp;lt;NAME&amp;gt;_DEFINITIONS 以 OpenCV 為例, 就會先在模組找 FindOpenCV.cmake 找不到再去找 OpenCVConfig.cmake
參考 https://blog.csdn.net/u011092188/article/details/61425924 https://blog.csdn.net/haluoluo211/article/details/80559341</description></item><item><title>藍芽鍵盤於 Windows 和 Ubuntu 雙系統之配對與開機</title><link>https://ptzu.github.io/posts/bluetooth-keyboard-dual-boot-ubuntu/</link><pubDate>Tue, 11 Sep 2018 21:25:58 +0000</pubDate><guid>https://ptzu.github.io/posts/bluetooth-keyboard-dual-boot-ubuntu/</guid><description>前言 最近組了一台新電腦放到交大宿舍 不過位置有點小 所以採用了無線滑鼠和鍵盤 其中鍵盤是 Logitech K810 藍芽 其實如果都選 2.4GHz 的接收器鍵鼠, 就沒有這篇了ＸＤ 但是 K810 的造型實在太生火了 所以還是買了下去 這篇主要解決了以下問題:
藍芽鍵盤無法在開機選單選擇系統 藍芽在切換系統後需要重新配對 切換系統後時間不一致 藍芽於 BIOS 由於藍芽必須在系統啟動後才能配對 所以在 BIOS 階段是無法使用的ＱＱ 在我的搜尋下有兩個解法 一是將 Ubuntu grub 改成可以用滑鼠選擇 這裡我找到了 Gujin bootloader 號稱 mouse support 的開機選單 不過套件有點久遠, 又一直 build 不起來 只好放棄了 二是使用 EasyBCD 替 Windows 製作多系統開機選單 這個流程是已經載入 Windows 了 所以可以使用藍芽鍵鼠進行選擇
系統背景 我的雙系統都是以 MBR 格式安裝的 並用 BIOS(Lagacy) 啟動 若是用 UEFI 的話不確定能否使用
還原 Windows bootloader 首先我是先安裝 Windows 再裝 Ubuntu Windows 的 bootloader 在 MBR 磁區會被蓋掉 所以我們開機的時候會是 grub 但是因為找不到 grub 的解法ＸＤ 所以我們必須再把 grub 蓋掉 這部分我們可以到 Windows 安裝畫面(CD or USB) 然後按修復電腦 -&amp;gt; 使用命令提示字元 接著切換到開機的磁區(C槽) 輸入指令</description></item><item><title>相機座標系、世界座標系</title><link>https://ptzu.github.io/posts/camera-frame-world-frame/</link><pubDate>Wed, 08 Aug 2018 23:15:18 +0000</pubDate><guid>https://ptzu.github.io/posts/camera-frame-world-frame/</guid><description>最近在讀 SLAM 相關 paper 時 常看到 camera/world frame 我原本想說是和 keyframe 類似的東西 結果是完全不同的東西呀～ 這邊指的是座標系(雖然我還是不知道為什麼要用frame)
順手整理一下相機的相關座標轉換 相機模型中主要有四個平面座標系:
畫素平面座標系（u,v): 圖像在像素中的位置 像平面座標系 (影像物理座標（x,y)): 以相機主點為原點，場景點在圖像平面上的投影座標。 相機座標系（Xc,Yc,Zc): 以相機為中心的三維座標。 世界座標系（Xw,Yw,Zw): 絕對座標系統中的三維座標。 當我們能將這四個座標軸作轉換, 那麼就能從二維影像得知在三維世界中的位置
畫素平面 &amp;lt;=&amp;gt; 像平面 因為畫素不能反映圖像真實尺寸 像平面可以想成是一張二維影像 只是被縮小成像素大小(物理層面) 畫素單位是 pixel(微米大小), 而像平面單位是 mm
假設畫素座標為 {%math%}(u, v, 1)^{T}{%endmath%} (這邊用的是齊次座標, 當成是(u, v)就好了) 像平面座標 {%math%}(x, y){%endmath%} 每個像素的真實尺寸為 dx * dy
我們以圖像中心當作像平面座標的原點 {%math%}(u_{0}, v_{0}){%endmath%} 所以: {%math%}\left{\begin{matrix} u=\frac{x}{dx}+u_{0}\ v=\frac{y}{dy}+v_{0} \end{matrix}\right.{%endmath%} {%math%}\left{\begin{matrix} x=udx-u_{0}dx\ y=udy-u_{0}dy \end{matrix}\right.{%endmath%}
若以矩陣來表示: {%math%}\begin{bmatrix} u\ v\ 1 \end{bmatrix} \begin{bmatrix} \frac{1}{dx} &amp;amp; 0 &amp;amp; u_{0}\ 0&amp;amp; \frac{1}{dy} &amp;amp; v_{0}\ 0&amp;amp; 0 &amp;amp; 1 \end{bmatrix}\begin{bmatrix} x\ y\ 1 \end{bmatrix}{%endmath%}</description></item><item><title>Mac OSX 遠端連線 GUI</title><link>https://ptzu.github.io/posts/mac-x11-forward/</link><pubDate>Wed, 18 Jul 2018 22:03:52 +0000</pubDate><guid>https://ptzu.github.io/posts/mac-x11-forward/</guid><description>最近沒 ubuntu 環境可以用 只好遠端連線到實驗室 server 但是要跑一些程式需要 GUI 介面 於是了解了一下如何用 ssh 開啟圖形介面
架構 圖形介面呈現由 X window system 主要分為 X server 和 X cilent 詳細請見鳥哥 架構圖如下: 而我們的 X client 指的就是遠端伺服器(Linux) 必須先確定有裝 X window(Desktop Version) 接著 X server 就是我們的本地端(Mac) OSX 上有個 X window 的開源實作: XQuartz
設定 Linux 在 /etc/ssh/sshd_config 中加入
X11Forwarding yes X11DisplayOffset 10 MAC 在 /private/etc/ssh/ssh_config 中加入
ForwardX11yes 不過我對這個保持懷疑 因為我沒修改也可以成功執行
執行結果 在 XQuartz 打開終端機輸入
ssh -X username@remoteaddress 執行 gvim 看看 有成功叫出圖形介面
不過在 docker 環境下就沒辦法 之後再想辦法:</description></item><item><title>主席樹之詳細解說</title><link>https://ptzu.github.io/posts/chairman-tree/</link><pubDate>Mon, 29 Jan 2018 09:59:36 +0000</pubDate><guid>https://ptzu.github.io/posts/chairman-tree/</guid><description>待補
參考資料 http://blog.csdn.net/Lin_disguiser/article/details/52093248 http://blog.csdn.net/Regina8023/article/details/41910615 https://blog.masterliu.net/chairman-tree/ http://blog.csdn.net/good_night_sion_/article/details/72919960 http://chrysanthemum.is-programmer.com/posts/189902.html 帶修改
https://tw.saowen.com/a/c97b1e0a1d5be2000652c21d5d3471ea86b13359a5acf317c6828c3bf006301f http://blog.csdn.net/u014664226/article/details/47839973</description></item><item><title>二分匹配</title><link>https://ptzu.github.io/posts/bipartite-matching/</link><pubDate>Fri, 12 Jan 2018 15:12:43 +0000</pubDate><guid>https://ptzu.github.io/posts/bipartite-matching/</guid><description>問題描述 給一張二分圖, 我們想要求取他的最大匹配 那什麼是匹配呢？ 匹配就是一個 &amp;ldquo;邊的集合&amp;rdquo; 裡面蒐集的邊有這個性質 &amp;ldquo;任兩條邊的端點必不相同&amp;rdquo; 我們想要的就是讓這個集合愈大愈好 而在二分圖上的最大匹配就是二分匹配
名詞解釋 匹配點, 非匹配點, 匹配邊, 非匹配邊: 最大匹配: 匹配邊數最多的匹配 完美匹配: 圖中的每一個點都是匹配點 交替路徑: 從未匹配點出發, 依序走未匹配邊, 匹配邊, 交錯下去的路徑 增廣路徑: 從未匹配點出發, 走交替路徑, 然後可以抵達另一個未匹配點的路徑
演算法過程 這裡介紹匈牙利演算法, 請搭配模版理解 一開始我們只要一遇到未匹配點, 那就將兩點匹配 接著從點3出發, 發現有一條增廣路徑 然後將剛剛那條路徑的顏色交換, 也就是非匹配邊和匹配邊互換身份 最後都沒有增廣路徑了, 結束演算法 匹配數 = 3
延伸主題 名詞 邊涵蓋: 一個邊集合 F, 使圖中的任意一點都至少與 F 的邊相連 點涵蓋: 一個點集合 S, 使圖中的任意一條邊都至少與 S 的點相連 獨立集合: 一個點集合 S, S 中的任意兩點在圖中都不相連 定理 對沒有孤立點的圖, |最大匹配| + |最小邊涵蓋| = |V| |最大獨立集合| + |最小點涵蓋| = |V| |最大匹配| = |最小點涵蓋| (König定理) 證明待補</description></item><item><title>BSGS 演算法</title><link>https://ptzu.github.io/posts/bsgs-algorithm/</link><pubDate>Sat, 28 Oct 2017 13:25:28 +0000</pubDate><guid>https://ptzu.github.io/posts/bsgs-algorithm/</guid><description>BSGS 原名Baby Steps Giant Steps，又名大小步算法 用途是用來解離散對數, {% math %} a^{x}\equiv b\left( mod\ p\right) {% endmath %} 求最小 x 的解
步驟為
令 {% math %} x=im-j {% endmath %} {% math %} m = \left \lceil \sqrt{p} \right \rceil {% endmath %} {% math %} a^{im-j} \equiv b(mod\ p) {% endmath %} 移項 {% math %} a^{im} \equiv a^{j}b(mod\ p) {% endmath %} 對於 {% math %} a^{j}b {% endmath %} 列舉 0 ~ m 存起來 再對於 {% math %} a^{im} {% endmath %} 列舉 1 ~ m 對於第一個符合方程式的 i, j 即為所求, 代回去可得到 x 問題與證明 何時無解？ 有解必須滿足費馬小定理, p 為質數, 且 gcd(a, p) = 1</description></item><item><title>求取循環節長度</title><link>https://ptzu.github.io/posts/repeatingdecimal/</link><pubDate>Sat, 28 Oct 2017 11:01:11 +0000</pubDate><guid>https://ptzu.github.io/posts/repeatingdecimal/</guid><description>任何有理數 p / q 皆可以用循環小數來表示 像是 1 / 3 = 0.33333&amp;hellip; 1 / 4 = 0.25000&amp;hellip;
以下介紹一些定理以及方法 來求取 非循環節 以及 循環節
定理 不循環節長度 - 2 / 5 定理： 分母拆解成 2 和 5 的乘積, 長度 = max(num_2, num_5);
循環節長度: 如果 b 沒有 2 or 5 的質因數, 且 a, b 互質 則 a / b 的循環節長度為: {% math %} \min { e\in N,10^{e}\equiv 1(mod\ b) } {% endmath %} 然後我們就可以用 BSGS 演算法來求出 e</description></item><item><title>關於 '\n' 的各種輸入</title><link>https://ptzu.github.io/posts/aboutnewline/</link><pubDate>Sun, 22 Oct 2017 10:20:09 +0000</pubDate><guid>https://ptzu.github.io/posts/aboutnewline/</guid><description>在 C/C++ 輸入字串的時候 輸入一個整數 n, 接著讀取 n 個字串 常常會發生下面這種問題
咦！！我的第 5 行勒？？ 不用懷疑, 絕對不是你的電腦壞掉, 而是你不夠了解程式內部的細節 事實上, 當我們每按一次 enter(換行) 的時候 他其實是輸入換行符號 在 Windows 上是 CR+LF, 在 Linux 上是 LF(也就是'\n'), 在 MAC OS 上是 CR 所以當我們進行輸入的時候, 資料會先被放在 buffer(暫存區) 而像 scanf 這些 input 函數會去 buffer 將資料讀取到記憶體 所以當 scanf 讀取一個數字時, 其實有個 &amp;lsquo;\n&amp;rsquo; 被遺留在 buffer 就像如此: 而這個時候 fgets 讀取就會讀到 &amp;lsquo;\n&amp;rsquo;, 理所當然的就少一行資料
以下就來分析各種 input 函數對於 &amp;lsquo;\n&amp;rsquo; 的處理方式
scanf(&amp;quot;%s&amp;quot;) 遇到 &amp;lsquo;\n&amp;rsquo; 就中止, 不讀入 &amp;lsquo;\n&amp;rsquo; fgets 遇到 &amp;lsquo;\n&amp;rsquo; 就中止, 讀入 &amp;lsquo;\n&amp;rsquo;, 會放到子串裡面 cin &amp;raquo; s 遇到 &amp;lsquo;\n&amp;rsquo; 就中止, 不讀入 &amp;lsquo;\n&amp;rsquo; getline 遇到 &amp;lsquo;\n&amp;rsquo; 就中止, 讀入 &amp;lsquo;\n&amp;rsquo;, 不會放到子串裡面 scanf(&amp;quot;%d\n&amp;quot;) 其實 scanf 是一個匹配函數, 甚至好幾個 &amp;lsquo;\n&amp;rsquo; 都被處理掉了 看完以上的例子, 應該會更清楚要怎麼處理這種 input 了！</description></item><item><title>IIS Express 遠端(內網)存取</title><link>https://ptzu.github.io/posts/iisremoteaccess/</link><pubDate>Fri, 22 Sep 2017 10:12:28 +0000</pubDate><guid>https://ptzu.github.io/posts/iisremoteaccess/</guid><description>在測試 Web API 的時候, localhost 測都沒有問題 但是在不同電腦上測卻出現了 400 Bad Request 找了蠻多資料才解決 因為預設只開放 localhost 連線 所以我們必須做一些設定才可遠端連線 整理如下:
設定IP 在 cmd 輸入 ipconfig 取得本機IP
取得專案 port 使用 netsh 將本機 IP 及 port 加入 URL 保留區 檢查設定 netsh http show urlacl 刪除設定 測試完再做刪除就好
netsh http delete urlacl url=http://192.168.1.101:51320/ 修改 IIS Express 設定 在&amp;quot;專案&amp;quot;資料夾下找到
.vs/config 資料夾中的 applicationhost.config 打開之後在裡頭添加 binding 註: VS2013是採用集中管理, VS2015之後將設定檔改成分散式管理, 也就是在各個專案之中, 注意版本, 修改錯設定檔會沒有效果 修改防火牆規則 在輸入規則添加專案所使用的 port 添加方法不再贅述 測試結果 打開 IIS Express 應該要有 2 個站台 可能遇到的問題 打不開網頁 請用管理員權限打開 Visual Studio 出現 503 Service Unvailable binding 設定沒設定好 注意是否修改錯檔案</description></item><item><title>透過 RS232 進行電腦訊息互傳</title><link>https://ptzu.github.io/posts/rs232-implement/</link><pubDate>Fri, 09 Jun 2017 14:47:40 +0000</pubDate><guid>https://ptzu.github.io/posts/rs232-implement/</guid><description>禮拜一花了 9 個小時 完成了電腦之間用 RS232 互傳 以及電腦對字幕機的寫入
需要器材 兩條 USB 轉 RS232接線 RS232 兩端母對母的線 母對母的需要對TX, RX做跳線(外面賣的是沒有跳線) 電腦之間互傳 首先是我們在網路上找到的 RS232 C Library RS232 下載
打開下載回來的 RS232 包 可以看到裡面有 demo_tx.c 和 demo_rx.c TX, RX 分別代表傳輸和接收
TX 要修改的是 cport_nr 這個變數 他代表要用哪個連接埠傳輸, 可以到裝置管理員看是哪一個 我們的是 COM4 所以改成 cport_nr=3 然後 bdrate 代表的是 baud rate, 是傳輸速率
/************************************************** file: demo_tx.c purpose: simple demo that transmits characters to the serial port and print them on the screen, exit the program by pressing Ctrl-C compile with the command: gcc demo_tx.</description></item><item><title>在 PHP 調用 Compiler</title><link>https://ptzu.github.io/posts/php-call-compiler/</link><pubDate>Sun, 04 Jun 2017 17:24:29 +0000</pubDate><guid>https://ptzu.github.io/posts/php-call-compiler/</guid><description>今天在做 Online Judge 時 來到了調用 Compiler 來編譯的步驟 在 PHP 方面有三個函數可以選擇 分別是 system(), exec(), shell_exec() 詳細差異就請自行去搜尋吧
先講結論: 不需要 sudo 權限就可以執行 g++
一開始我以為呼叫 g++ 需要 sudo權限 於是去找了怎麼使 apache 有權限 可以呼叫
System(&amp;#39;id&amp;#39;); 來查看 apache 是用什麼身份 我的是 www-data 這個帳號 接著打 visudo 來編輯 sudoer file, 不建議直接修改 sudoer file 因為需要更改到 sudoer file 的權限, 改來改去可能會有權限上的問題 我在檔案內加了這行
www-data ALL(ALL:ALL) NOPASSWD:ALL 其中 NOPASSWD 是呼叫 sudo 時不用打密碼 本來以為終於要可以執行了 結果跳出了訊息 sudo: no tty present and no askpass program specified 雖然在找資料過程已經知道 apache 沒有 tty, 所以會有這個問題 但網路上沒有一個方法可以解決阿！ 網路上幾乎都是提到 1.</description></item><item><title>在 Ubuntu 安裝 phpmyadmin</title><link>https://ptzu.github.io/posts/ubuntu-phpmyadmin/</link><pubDate>Wed, 31 May 2017 22:25:55 +0000</pubDate><guid>https://ptzu.github.io/posts/ubuntu-phpmyadmin/</guid><description>在 Ubuntu 安裝 phpmyadmin 非常簡單
安裝 MySQL sudo apt-get install mysql-server 過程中會要求你輸入 root 密碼
安裝 phpmyadmin sudo apt-get install phpmyadmin 過程會有 1.選擇伺服器(apache2) 2.剛剛設置的 mysql root 密碼
phpMyAdmin的設置文件在: /etc/phpmyadmin/config.inc.php
安裝好之後還不能馬上使用 需要在 apache2.conf 下添加
Include /etc/phpmyadmin/apache.conf 之後在重啟 apache server
就可以透過 host/phpmyadmin 來登入</description></item><item><title>MySQL 新增使用者</title><link>https://ptzu.github.io/posts/mysql-newuser/</link><pubDate>Wed, 31 May 2017 21:38:43 +0000</pubDate><guid>https://ptzu.github.io/posts/mysql-newuser/</guid><description>新增帳號 mysql&amp;gt; GRANT 權限 ON 資料庫(或資料表TABLE) TO user@host IDENTIFIED BY &amp;lsquo;密碼&amp;rsquo;;
資料庫的權限有 15 種： ALTER CREATE DELETE DROP FILE INDEX INSERT PROCESS REFERENCES RELOAD SELECT SHUTDOWN UPDATE USAGE ALL PRIVILEGES(以上全部開放)
host 為主機, 如果架在本機, 就打 localhost</description></item><item><title>HTML, PHP 如何上傳檔案？</title><link>https://ptzu.github.io/posts/htmlinputfile/</link><pubDate>Sat, 20 May 2017 14:31:01 +0000</pubDate><guid>https://ptzu.github.io/posts/htmlinputfile/</guid><description>要在 Html 有上傳檔案的介面 必須利用到
&amp;lt;input type=&amp;#39;file&amp;#39; name=&amp;#39;upfile&amp;#39; class=&amp;#39;upfile&amp;#39;&amp;gt; 這樣就會產生大家熟悉的&amp;rsquo;選擇檔案&amp;rsquo;按鈕 接著利用表單把檔案送出去 如果表單中有 file 類型的 input enctype=&amp;ldquo;multipart/form-data&amp;rdquo; 是必須要加的
&amp;lt;form action=&amp;#34;XXX.php&amp;#34; method=&amp;#34;post&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34; name=&amp;#34;upload&amp;#34;&amp;gt; &amp;lt;input type=&amp;#39;file&amp;#39; name=&amp;#39;upfile&amp;#39; class=&amp;#39;upfile&amp;#39;&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34; class=&amp;#39;btn&amp;#39;&amp;gt; Upload&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; PHP處理檔案 我們可以用 $_FILES 陣列來取得上傳的檔案 上傳之後會存在一個暫存資料夾 如果要把檔案存在伺服器, 記得利用 move_uploaded_file 移到你要的資料夾
$_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;name&amp;rdquo;]：上傳檔案的原始名稱。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;type&amp;rdquo;]：上傳的檔案類型。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;size&amp;rdquo;]：上傳的檔案原始大小。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;tmp_name&amp;rdquo;]：上傳檔案後的暫存資料夾位置。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;error&amp;rdquo;]：如果檔案上傳有錯誤，可以顯示錯誤代碼。
參考資料:
http://www.webtech.tw/info.php?tid=24 https://www.tad0616.net/modules/tad_book3/html.php?tbdsn=100 http://forum.twbts.com/thread-3299-1-1.html</description></item><item><title>不使用 JQuery 達到 Ajax 上傳表單</title><link>https://ptzu.github.io/posts/ajax-form/</link><pubDate>Sat, 20 May 2017 13:19:55 +0000</pubDate><guid>https://ptzu.github.io/posts/ajax-form/</guid><description>這篇不介紹使用 JQuery 的 Ajax 而是利用 XMLHttpRequest(xhr) 來做到相同的效果 首先是 Ajax 的 Javascript 語法 xmlhttp.open(方法, 請求對象, true)
GET 例子 var xmlhttp = new XMLHttpRequest(); xml.http.open(&amp;#34;GET&amp;#34;, XXX.php, true); xmlhttp.onreadystatechange=function check_user() { if(xmlhttp.readyState == 4) { if(xmlhttp.status == 200) { ... } } } xml.send(null); 如果想帶參數, 在請求對象那邊可以改成 XXX.php?arg1=val1&amp;amp;&amp;amp;arg2=val2 然後在對象那邊用 $_GET[&amp;lsquo;arg1&amp;rsquo;], $_GET[&amp;lsquo;arg2&amp;rsquo;] 來取得
POST 例子 待測試
var xmlhttp = new XMLHttpRequest(); xml.http.open(&amp;#34;POST&amp;#34;, XXX.php, true); xmlhttp.onreadystatechange=function check_user() { if(xmlhttp.readyState == 4) { if(xmlhttp.status == 200) { .</description></item><item><title>利用 CSS 達到 div 併排</title><link>https://ptzu.github.io/posts/css-float/</link><pubDate>Fri, 19 May 2017 11:44:58 +0000</pubDate><guid>https://ptzu.github.io/posts/css-float/</guid><description>假設我們現在有3個區塊想要並列一起
&amp;lt;div class=&amp;#34;wrap&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;a&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;b&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;c&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 我們可以在 Css 中利用 float 來達成併排效果
.wrap{ background-color: green; } .a, .b, .c{ float: left; } 這樣就可以達到效果 但這時候你可能會發現, 父階層的 div 怎麼沒有高度？ 原因是 float 造成元素沒有撐起 div 高度
有三種方法解決
對父階層設定高度 使用 css clear 在結束標籤前加一個 div(注意不是直接作用在父階層哦) &amp;lt;div class=&amp;#34;wrap&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;a&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;b&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;c&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;clear&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; ```css .clear{ clear:both; } 對父階層使用 css overflow .wrap{ overflow: hidden; }</description></item><item><title>PHP 時間函數</title><link>https://ptzu.github.io/posts/php-time/</link><pubDate>Wed, 17 May 2017 20:57:24 +0000</pubDate><guid>https://ptzu.github.io/posts/php-time/</guid><description>設定時區 date_default_timezone_set(&amp;#34;Asia/Taipei&amp;#34;) 日期 date(&amp;#39;Y-m-j&amp;#39;); 2017-05-17
年: Y(四位數字), y(兩位數字) 月: F(英文全稱), M(英文縮寫), m(數字前導), n(數字無前導) 日: j(沒前導), d(有前導)
時:分:秒 date(&amp;#39;g:i:s a&amp;#39;); 11:19:30 pm
時: g(12小時制無前導), h(12小時制有前導), 小寫 a 代表 am, pm, 大寫 A 代表 AM, PM
echo date(&amp;#39;T&amp;#39;); UTC 大寫T表示伺服器的時間區域設置
echo date(&amp;#39;U&amp;#39;); 1170769424 大寫U表示從1970年1月1日到現在的總秒數，就是Unix時間紀元的UNIX時間戳。</description></item><item><title>Windows 上安裝 mosquitto</title><link>https://ptzu.github.io/posts/mosquitto-configure/</link><pubDate>Mon, 15 May 2017 20:40:31 +0000</pubDate><guid>https://ptzu.github.io/posts/mosquitto-configure/</guid><description>所需檔案 Mosquitto for Windows Win32 OpenSSL pthread-win32 根據路徑找到檔案下載 安裝 mosquitto 執行 mosquitto 安裝程式
過程選擇安裝路徑 勾選下面那個 接著按 Next, 應該會出現以下錯誤畫面 因為我們缺少 libeay32.dll 和 ssleay32.dll
安裝需要的元件 回到最上面說的, 在Win32 OpenSSL那裡有下載了安裝檔 我們要安裝它來取得 libeay32.dll 和 ssleay32.dll
選擇安裝路徑 最後面的畫面是要你捐錢, 沒有要捐就把它勾掉吧 然後我們到安裝好的資料夾取出 libeay32.dll 和 ssleay32.dll 以及在 pthread-win32 下載的 pthreadVC2.dll 一起放到剛剛未完成安裝的 mosquitto 資料夾
到這邊就安裝完成了！
啟動 mosquitto 伺服器 到工作管理員/服務 找到 mosquitto 啟動它 簡單測試 subscribe 和 publish 本機當作伺服器測試 打開cmd
訂閱 &amp;quot;C:\Program Files (x86)\mosquitto\mosquitto_sub.exe&amp;quot; -d -h 127.</description></item><item><title>RS232雜記</title><link>https://ptzu.github.io/posts/rs232/</link><pubDate>Thu, 04 May 2017 21:29:03 +0000</pubDate><guid>https://ptzu.github.io/posts/rs232/</guid><description>1.BuildCommDCB 函數原型: BOOL BuildCommDCB( LPCTSTR lpDef, LPDCB lpDCB ). BuildCommDCB 函數是用來填寫 DCB 的資料,何謂 DCB 呢? DCB 的全名為 Device Control Block 是一資料結構,裡面定義著所有有關串列通訊(Serial Communication)的設定值,DCB 資料結構定義如下:
typedef struct _DCB { DWORD DCBlength; // DCB 的大小 (in byte) DWORD BaudRate; // 傳輸率 (baud rate) bit/秒 DWORD fBinary: 1; // 二進制模式,沒有 EOF 檢查. DWORD fParity: 1; // 同位元檢查 (parity checking) DWORD fOutxCtsFlow:1; // CTS output flow control DWORD fOutxDsrFlow:1; // DSR output flow control DWORD fDtrControl:2; // DTR flow control type DWORD fDsrSensitivity:1; // DSR sensitivity DWORD fTXContinueOnXoff:1; // XOFF continues Tx DWORD fOutX: 1; // XON/XOFF out flow control DWORD fInX: 1; // XON/XOFF in flow control DWORD fErrorChar: 1; // enable error replacement DWORD fNull: 1; // enable null stripping DWORD fRtsControl:2; // RTS flow control DWORD fAbortOnError:1; // abort reads/writes on error DWORD fDummy2:17; // reserved WORD wReserved; // not currently used WORD XonLim; // transmit XON threshold WORD XoffLim; // transmit XOFF threshold BYTE ByteSize; // 每一筆資料的 bit 數, 4-8 BYTE Parity; // 同位元 (0-4) = 無,奇同位,偶同位,mark,space BYTE StopBits; // 停止位元 (0,1,2) = 1, 1.</description></item><item><title>用 Javascript 取得 Html input</title><link>https://ptzu.github.io/posts/js-and-input/</link><pubDate>Thu, 13 Apr 2017 23:36:53 +0000</pubDate><guid>https://ptzu.github.io/posts/js-and-input/</guid><description>寫作業遇到要用 JS 取得 input tag 送出的值 在 StackOverflow 查到有六種方法:
以
&amp;lt;input name=&amp;quot;searchTxt&amp;quot; type=&amp;quot;text&amp;quot; maxlength=&amp;quot;512&amp;quot; id=&amp;quot;searchTxt&amp;quot; class=&amp;quot;searchField&amp;quot;/&amp;gt; 為例
document.getElementById(&amp;lsquo;id&amp;rsquo;).value document.getElementsByClassName(&amp;lsquo;class_name&amp;rsquo;)[].value document.getElementsByTagName(&amp;lsquo;tag_name&amp;rsquo;)[].value document.getElemenstByName(&amp;lsquo;name&amp;rsquo;)[].value document.querySelector(&amp;lsquo;any&amp;rsquo;).value document.querySelectorAll(&amp;lsquo;any&amp;rsquo;)[].value 2, 3, 4, 6都是返回一群元素
5, 6是利用 CSS selector</description></item><item><title>SQL 常見指令</title><link>https://ptzu.github.io/posts/sql-instruction/</link><pubDate>Fri, 07 Apr 2017 23:18:31 +0000</pubDate><guid>https://ptzu.github.io/posts/sql-instruction/</guid><description>建立資料庫: create database 資料庫名稱;
列出所有資料庫: show databases;
使用資料庫: use 資料庫名稱;
建立資料表: create table 資料表名稱(欄位名稱 型態,&amp;hellip;) 型態有: integer, real, char()
刪除資料表: drop table 資料表名稱;
新增資料表欄位: alter table 資料表名稱 add 欄位名稱 型態
刪除資料表欄位: alter table 資料表名稱 drop 欄位名稱 型態
插入資料: insert into 資料表名稱(欄位1, 欄位2, &amp;hellip;) values(&amp;lsquo;值1&amp;rsquo;, &amp;lsquo;值2&amp;rsquo;, &amp;hellip;)
刪除資料: delete from 資料表名稱 where 條件式 ex: delete from Students as S where S.name = &amp;lsquo;Smith&amp;rsquo;; 其中 as S 是縮寫寫法, as 可以不用加
更新資料: update 資料表名稱 set 欄位名稱 = 值, &amp;hellip; where 條件式</description></item><item><title>Compiler(一)：環境建制以及Lexer</title><link>https://ptzu.github.io/posts/compiler1/</link><pubDate>Mon, 03 Apr 2017 22:32:26 +0000</pubDate><guid>https://ptzu.github.io/posts/compiler1/</guid><description>使用 ANTLR V3 ANTLR官網
ANTLR 利用 .g 檔生成 Lexer 定義 Token 如下:
INT_TYPE : 'int'; LONGLONG_TYPE : 'long long'; CHAR_TYPE : 'char'; VOID_TYPE : 'void'; FLOAT_TYPE: 'float'; WHILE_ : 'while'; FOR_ : 'for'; IF_ : 'if'; ELSE_ : 'else'; 一些常見型態如: int, long long, char, void, float 一些保留字如: while, for, if, else
ASSIGN_OP : '='; P_OP : '+'; M_OP : '-'; MU_OP : '*'; MUA_OP : '*='; D_OP : '/'; DA_OP : '/='; PA_OP : '+='; MA_OP : '-='; EQ_OP : '=='; LE_OP : '&amp;lt;='; GE_OP : '&amp;gt;='; NE_OP : '!</description></item><item><title>MySQL CSV檔匯入 Invalid uft8 character</title><link>https://ptzu.github.io/posts/mysql-problem1/</link><pubDate>Sun, 12 Mar 2017 23:22:42 +0000</pubDate><guid>https://ptzu.github.io/posts/mysql-problem1/</guid><description>環境: Windows 今天在匯入 csv 檔到資料表時 指令:
load data local infile &amp;#39;D:\\HW1_excel\\book.csv&amp;#39; into table mytable fields terminated by &amp;#39;,&amp;#39; lines terminated by &amp;#39;\r\n&amp;#39;; 跳出了錯誤: Invalid uft8 character string: &amp;quot; 查了發現是編碼問題 請先確認欄位的編碼和文件編碼是否相同 欄位查詢可以使用:
show full fields from TABLE名稱 文件部份: 可以使用 nodepad++ 『Encoding』-&amp;gt; 『Convert to UTF-8』 小心不要像我腦殘選成 Encode in UTF-8, 這樣是不會轉換的&amp;hellip;
如果已經確定編碼都相同 我還遇到一個問題: 1366 incorrect integer value 除了是你資料和欄位型態不同之外 還有可能是你的編碼含BOM, 所以同上改變編碼(不要選有BOM的喔！)
ps: 如果要讀txt檔, 欄位資料之間用TAB隔開
4/26 更新： 在MySQL中, 預設的資料分隔是 TAB, 換行則是 &amp;lsquo;\n&amp;rsquo; 而在 Windows 中, 換行符號則是 &amp;lsquo;\r\n&amp;rsquo; 如果沒有 lines terminated by &amp;lsquo;\r\n&amp;rsquo; 這段, &amp;lsquo;\r&amp;rsquo;會被保留下來 導致可能資料看起來明明是對的, 但其實在結尾多了 &amp;lsquo;\r&amp;rsquo; 需特別注意！！</description></item><item><title>資料結構 － Segment Tree</title><link>https://ptzu.github.io/posts/segment-tree/</link><pubDate>Sun, 04 Dec 2016 20:09:49 +0000</pubDate><guid>https://ptzu.github.io/posts/segment-tree/</guid><description>用途 多筆區間查詢時, 如果有某點被更新, 則每次都要O(n)重新計算 這樣非常耗時, 因此有了線段樹這個資料結構
變數定義 N: input 個數 NN: 恰好大於 N 的 2次方 seg[]: 線段樹陣列
圖解 以 N = 7 為例子(不是2的指數次) input 為 1, 2, 3 ,4, 5, 6, 7
init #build (建構線段樹) 參數說明: idx 為 該區塊在 seg[]陣列中實際的index 合併 建構完成！</description></item><item><title>KMP Algorithm 探討</title><link>https://ptzu.github.io/posts/kmp/</link><pubDate>Thu, 28 Jul 2016 13:06:36 +0000</pubDate><guid>https://ptzu.github.io/posts/kmp/</guid><description>關於KMP 一般再搜尋字串時, 暴力搜尋將每個位置都搜尋一次 同時比對要搜尋的字串(pattern) 時間複雜度為O(nm)
KMP演算法改進了一些不必要的搜尋 使得時間複雜度為O(n + m)
名詞定義 失敗函數(failure function): 當比對失敗時, pattern需位移幾位才能成為前綴, 一般用在字串比對失敗時查找, 故稱失敗函數
建立 F 函數 這邊放上網路上常見兩種寫法 不變的是 j 代表的是目前比對的字元的 &amp;lsquo;前一個字&amp;rsquo; f[i] 代表比對失敗時, j 要變成的位置
字串從 0 開始存, 沒匹配字元時, f 值為 -1 void getF(string s){ f[0] = -1; for(int i = 1; i &amp;lt; s.length(); i++){ int j = f[i - 1]; //如果不相等, 先位移到適合位置 while(j &amp;gt;= 0 &amp;amp;&amp;amp; s[j + 1] != s[i]) j = f[j]; if(s[j + 1] == s[i]) f[i] = j + 1; //還是不相等, 此時 j = -1 else f[i] = j; } } 字串從 1 開始存, 沒匹配字元時, f 值為 0 void getF(string s) { for (int i = 2; i &amp;lt;= s.</description></item></channel></rss>