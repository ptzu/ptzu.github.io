<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>網頁設計 on Ptzu's blog</title><link>https://ptzu.github.io/categories/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88/</link><description>Recent content in 網頁設計 on Ptzu's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Jun 2017 17:24:29 +0000</lastBuildDate><atom:link href="https://ptzu.github.io/categories/%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88/index.xml" rel="self" type="application/rss+xml"/><item><title>在 PHP 調用 Compiler</title><link>https://ptzu.github.io/posts/php-call-compiler/</link><pubDate>Sun, 04 Jun 2017 17:24:29 +0000</pubDate><guid>https://ptzu.github.io/posts/php-call-compiler/</guid><description>今天在做 Online Judge 時 來到了調用 Compiler 來編譯的步驟 在 PHP 方面有三個函數可以選擇 分別是 system(), exec(), shell_exec() 詳細差異就請自行去搜尋吧
先講結論: 不需要 sudo 權限就可以執行 g++
一開始我以為呼叫 g++ 需要 sudo權限 於是去找了怎麼使 apache 有權限 可以呼叫
System(&amp;#39;id&amp;#39;); 來查看 apache 是用什麼身份 我的是 www-data 這個帳號 接著打 visudo 來編輯 sudoer file, 不建議直接修改 sudoer file 因為需要更改到 sudoer file 的權限, 改來改去可能會有權限上的問題 我在檔案內加了這行
www-data ALL(ALL:ALL) NOPASSWD:ALL 其中 NOPASSWD 是呼叫 sudo 時不用打密碼 本來以為終於要可以執行了 結果跳出了訊息 sudo: no tty present and no askpass program specified 雖然在找資料過程已經知道 apache 沒有 tty, 所以會有這個問題 但網路上沒有一個方法可以解決阿！ 網路上幾乎都是提到 1.</description></item><item><title>HTML, PHP 如何上傳檔案？</title><link>https://ptzu.github.io/posts/htmlinputfile/</link><pubDate>Sat, 20 May 2017 14:31:01 +0000</pubDate><guid>https://ptzu.github.io/posts/htmlinputfile/</guid><description>要在 Html 有上傳檔案的介面 必須利用到
&amp;lt;input type=&amp;#39;file&amp;#39; name=&amp;#39;upfile&amp;#39; class=&amp;#39;upfile&amp;#39;&amp;gt; 這樣就會產生大家熟悉的&amp;rsquo;選擇檔案&amp;rsquo;按鈕 接著利用表單把檔案送出去 如果表單中有 file 類型的 input enctype=&amp;ldquo;multipart/form-data&amp;rdquo; 是必須要加的
&amp;lt;form action=&amp;#34;XXX.php&amp;#34; method=&amp;#34;post&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34; name=&amp;#34;upload&amp;#34;&amp;gt; &amp;lt;input type=&amp;#39;file&amp;#39; name=&amp;#39;upfile&amp;#39; class=&amp;#39;upfile&amp;#39;&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34; class=&amp;#39;btn&amp;#39;&amp;gt; Upload&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; PHP處理檔案 我們可以用 $_FILES 陣列來取得上傳的檔案 上傳之後會存在一個暫存資料夾 如果要把檔案存在伺服器, 記得利用 move_uploaded_file 移到你要的資料夾
$_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;name&amp;rdquo;]：上傳檔案的原始名稱。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;type&amp;rdquo;]：上傳的檔案類型。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;size&amp;rdquo;]：上傳的檔案原始大小。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;tmp_name&amp;rdquo;]：上傳檔案後的暫存資料夾位置。 $_FILES[&amp;ldquo;upload&amp;rdquo;][&amp;ldquo;error&amp;rdquo;]：如果檔案上傳有錯誤，可以顯示錯誤代碼。
參考資料:
http://www.webtech.tw/info.php?tid=24 https://www.tad0616.net/modules/tad_book3/html.php?tbdsn=100 http://forum.twbts.com/thread-3299-1-1.html</description></item><item><title>不使用 JQuery 達到 Ajax 上傳表單</title><link>https://ptzu.github.io/posts/ajax-form/</link><pubDate>Sat, 20 May 2017 13:19:55 +0000</pubDate><guid>https://ptzu.github.io/posts/ajax-form/</guid><description>這篇不介紹使用 JQuery 的 Ajax 而是利用 XMLHttpRequest(xhr) 來做到相同的效果 首先是 Ajax 的 Javascript 語法 xmlhttp.open(方法, 請求對象, true)
GET 例子 var xmlhttp = new XMLHttpRequest(); xml.http.open(&amp;#34;GET&amp;#34;, XXX.php, true); xmlhttp.onreadystatechange=function check_user() { if(xmlhttp.readyState == 4) { if(xmlhttp.status == 200) { ... } } } xml.send(null); 如果想帶參數, 在請求對象那邊可以改成 XXX.php?arg1=val1&amp;amp;&amp;amp;arg2=val2 然後在對象那邊用 $_GET[&amp;lsquo;arg1&amp;rsquo;], $_GET[&amp;lsquo;arg2&amp;rsquo;] 來取得
POST 例子 待測試
var xmlhttp = new XMLHttpRequest(); xml.http.open(&amp;#34;POST&amp;#34;, XXX.php, true); xmlhttp.onreadystatechange=function check_user() { if(xmlhttp.readyState == 4) { if(xmlhttp.status == 200) { .</description></item><item><title>利用 CSS 達到 div 併排</title><link>https://ptzu.github.io/posts/css-float/</link><pubDate>Fri, 19 May 2017 11:44:58 +0000</pubDate><guid>https://ptzu.github.io/posts/css-float/</guid><description>假設我們現在有3個區塊想要並列一起
&amp;lt;div class=&amp;#34;wrap&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;a&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;b&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;c&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 我們可以在 Css 中利用 float 來達成併排效果
.wrap{ background-color: green; } .a, .b, .c{ float: left; } 這樣就可以達到效果 但這時候你可能會發現, 父階層的 div 怎麼沒有高度？ 原因是 float 造成元素沒有撐起 div 高度
有三種方法解決
對父階層設定高度 使用 css clear 在結束標籤前加一個 div(注意不是直接作用在父階層哦) &amp;lt;div class=&amp;#34;wrap&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;a&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;b&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;c&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;clear&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; ```css .clear{ clear:both; } 對父階層使用 css overflow .wrap{ overflow: hidden; }</description></item><item><title>PHP 時間函數</title><link>https://ptzu.github.io/posts/php-time/</link><pubDate>Wed, 17 May 2017 20:57:24 +0000</pubDate><guid>https://ptzu.github.io/posts/php-time/</guid><description>設定時區 date_default_timezone_set(&amp;#34;Asia/Taipei&amp;#34;) 日期 date(&amp;#39;Y-m-j&amp;#39;); 2017-05-17
年: Y(四位數字), y(兩位數字) 月: F(英文全稱), M(英文縮寫), m(數字前導), n(數字無前導) 日: j(沒前導), d(有前導)
時:分:秒 date(&amp;#39;g:i:s a&amp;#39;); 11:19:30 pm
時: g(12小時制無前導), h(12小時制有前導), 小寫 a 代表 am, pm, 大寫 A 代表 AM, PM
echo date(&amp;#39;T&amp;#39;); UTC 大寫T表示伺服器的時間區域設置
echo date(&amp;#39;U&amp;#39;); 1170769424 大寫U表示從1970年1月1日到現在的總秒數，就是Unix時間紀元的UNIX時間戳。</description></item><item><title>用 Javascript 取得 Html input</title><link>https://ptzu.github.io/posts/js-and-input/</link><pubDate>Thu, 13 Apr 2017 23:36:53 +0000</pubDate><guid>https://ptzu.github.io/posts/js-and-input/</guid><description>寫作業遇到要用 JS 取得 input tag 送出的值 在 StackOverflow 查到有六種方法:
以
&amp;lt;input name=&amp;quot;searchTxt&amp;quot; type=&amp;quot;text&amp;quot; maxlength=&amp;quot;512&amp;quot; id=&amp;quot;searchTxt&amp;quot; class=&amp;quot;searchField&amp;quot;/&amp;gt; 為例
document.getElementById(&amp;lsquo;id&amp;rsquo;).value document.getElementsByClassName(&amp;lsquo;class_name&amp;rsquo;)[].value document.getElementsByTagName(&amp;lsquo;tag_name&amp;rsquo;)[].value document.getElemenstByName(&amp;lsquo;name&amp;rsquo;)[].value document.querySelector(&amp;lsquo;any&amp;rsquo;).value document.querySelectorAll(&amp;lsquo;any&amp;rsquo;)[].value 2, 3, 4, 6都是返回一群元素
5, 6是利用 CSS selector</description></item></channel></rss>